# Generated by Django 5.2 on 2025-04-30 18:16

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InstrumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the instrument category (max 30 characters)', max_length=30, validators=[django.core.validators.MinLengthValidator(2, 'Category name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(30, 'Category name cannot exceed 30 characters.')])),
                ('description', models.TextField(help_text='Provide a description of the instrument category.')),
            ],
            options={
                'verbose_name_plural': 'Instrument Categories',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name of the manufacturer', max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(2, 'Manufacturer name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(50, 'Manufacturer name cannot exceed 50 characters.')])),
                ('country', models.CharField(blank=True, help_text='Enter the manufacturer origin country', max_length=50, null=True, validators=[django.core.validators.MinLengthValidator(2, 'Manufacturer country must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(50, 'Manufacturer country cannot exceed 50 characters.')])),
                ('description', models.TextField(help_text='Type the manufacturer description')),
                ('website', models.URLField(blank=True, help_text='Enter the URL of the manufacturer website', null=True, validators=[django.core.validators.URLValidator(message="Enter a valid URL including 'http[s]://'.")])),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the type of instrument (max 30 characters)', max_length=30, validators=[django.core.validators.MinLengthValidator(2, 'Category name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(30, 'Category name cannot exceed 30 characters.')])),
                ('description', models.TextField(help_text='Provide a description of the instrument type.')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.instrumentcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(help_text='Enter the brand name of the instrument (max 30 characters)', max_length=30, validators=[django.core.validators.MinLengthValidator(2, 'Brand name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(30, 'Brand name cannot exceed 30 characters')])),
                ('model', models.CharField(help_text='Enter the model name of the instrument (max 100 characters)', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'Model name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(100, 'Model name cannot exceed 100 characters')])),
                ('color', models.CharField(blank=True, help_text='Enter the color of the instrument (max 20 characters)', max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(2, 'Color name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(20, 'Color name cannot exceed 20 characters.')])),
                ('description', models.TextField(help_text='Provide a detailed description of the instrument.')),
                ('year', models.IntegerField(blank=True, help_text='Enter the year the instrument was manufactured.', null=True, validators=[django.core.validators.MinValueValidator(1900, 'Year must be 1900 or later.'), django.core.validators.MaxValueValidator(2100, 'Year must be 2100 or earlier.')])),
                ('image', models.ImageField(help_text='Upload an image of the instrument.', upload_to='instruments/')),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price of the instrument (max 10 digits, 2 decimal places).', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, 'Price must be greater than zero.')])),
                ('stock', models.IntegerField(help_text='Enter the number of items in stock.', validators=[django.core.validators.MinValueValidator(0, 'Stock cannot be negative.')])),
                ('type', models.ManyToManyField(help_text='Select one or more types for this instrument.', to='store.instrumenttype')),
            ],
        ),
    ]
